{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "bento-grid-demo",
  "type": "registry:example",
  "title": "Bento Grid Demo",
  "description": "Example showing a responsive grid layout.",
  "dependencies": [
    "..",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://nyxui.com/r/bento-grid.json"
  ],
  "files": [
    {
      "path": "registry/example/bento-grid-demo.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { BentoGrid } from \"../ui/bento-grid\";\nimport {\n  ChevronRight,\n  ArrowUp,\n  Users,\n  Clock,\n  Server,\n  Activity,\n  DollarSign,\n  TrendingUp,\n  Calendar,\n  BarChart3,\n  Globe,\n  Zap,\n  Eye,\n} from \"lucide-react\";\n\nconst generateRevenueData = () => {\n  return [\n    { name: \"Jan\", value: 65, amount: \"$12,450\" },\n    { name: \"Feb\", value: 59, amount: \"$11,200\" },\n    { name: \"Mar\", value: 78, amount: \"$14,800\" },\n    { name: \"Apr\", value: 72, amount: \"$13,950\" },\n    { name: \"May\", value: 85, amount: \"$16,300\" },\n    { name: \"Jun\", value: 96, amount: \"$18,420\" },\n  ];\n};\n\nexport const BentoGridDemo = () => {\n  const [currentTime, setCurrentTime] = useState(\n    new Date().toLocaleTimeString(),\n  );\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date().toLocaleTimeString());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const revenueData = generateRevenueData();\n\n  return (\n    <div>\n      <div className=\"mx-auto\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <BentoGrid\n            title={\n              <div className=\"flex flex-wrap items-center justify-items-start gap-2\">\n                <div className=\"p-2 rounded-lg bg-rose-100 dark:bg-rose-900/30\">\n                  <BarChart3 className=\"w-5 h-5 text-rose-600 dark:text-rose-400\" />\n                </div>\n                <span>Monthly Revenue</span>\n              </div>\n            }\n            description={\n              <div className=\"flex flex-wrap items-center gap-2\">\n                <ArrowUp className=\"w-4 h-4 text-emerald-500\" />\n                <span className=\"font-medium text-emerald-500\">\n                  12% increase\n                </span>\n                <span className=\"text-gray-500\">from previous month</span>\n              </div>\n            }\n            component={\n              <div className=\"h-full w-full p-4 flex flex-col\">\n                <div className=\"flex flex-wrap gap-2 items-center justify-between mb-4\">\n                  <div className=\"flex items-center gap-1 bg-emerald-50 dark:bg-emerald-900/30 text-emerald-600 dark:text-emerald-400 px-2 py-1 rounded-full text-xs font-medium\">\n                    <TrendingUp className=\"w-3 h-3\" />\n                    <span>Growing</span>\n                  </div>\n                  <div className=\"text-3xl font-bold text-gray-800 dark:text-white flex items-center\">\n                    <DollarSign className=\"w-6 h-6 text-rose-500\" />\n                    <span>18,420</span>\n                  </div>\n                </div>\n\n                <div className=\"flex w-full h-32 items-end justify-between gap-1 mt-auto\">\n                  {revenueData.map((item, index) => (\n                    <div\n                      key={index}\n                      className=\"flex flex-col items-center group\"\n                    >\n                      <div className=\"relative\">\n                        <div\n                          className=\"w-12 bg-gradient-to-t from-rose-600 to-rose-400 dark:from-rose-500 dark:to-rose-300 rounded-t-md transition-all duration-300 group-hover:from-rose-500 group-hover:to-rose-300 shadow-lg\"\n                          style={{\n                            height: `${item.value}%`,\n                            transform: `scaleY(${index === revenueData.length - 1 ? \"1\" : \"0.85\"})`,\n                            opacity: `${index === revenueData.length - 1 ? \"1\" : \"0.85\"}`,\n                            transition: \"all 0.3s ease\",\n                          }}\n                        >\n                          <div className=\"absolute -top-10 left-1/2 transform -translate-x-1/2 bg-gray-800 dark:bg-gray-700 text-white text-xs py-1 px-2 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap z-10 shadow-xl\">\n                            {item.amount}\n                          </div>\n                        </div>\n                        <div className=\"text-xs mt-2 text-gray-500 font-medium\">\n                          {item.name}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"mt-6 pt-4 border-t border-gray-100 dark:border-gray-800 flex items-center justify-between text-xs text-gray-500\">\n                  <div className=\"flex items-center gap-1\">\n                    <Calendar className=\"w-3 h-3\" />\n                    <span>Last 6 months</span>\n                  </div>\n                  <button className=\"text-rose-500 hover:text-rose-600 dark:hover:text-rose-400 font-medium flex items-center gap-1 transition-colors\">\n                    <span>Full report</span>\n                    <ChevronRight className=\"w-3 h-3\" />\n                  </button>\n                </div>\n              </div>\n            }\n            className=\"md:col-span-1 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\"\n          />\n\n          <BentoGrid\n            title={\n              <div className=\"flex items-center gap-2\">\n                <div className=\"p-2 rounded-lg bg-violet-100 dark:bg-violet-900/30\">\n                  <Users className=\"w-5 h-5 text-violet-600 dark:text-violet-400\" />\n                </div>\n                <span>User Engagement</span>\n              </div>\n            }\n            description=\"Daily activity patterns across user segments\"\n            component={\n              <div className=\"relative h-full w-full bg-gradient-to-br from-violet-600 to-indigo-700 rounded-lg overflow-hidden shadow-lg\">\n                <div className=\"absolute inset-0 bg-[url('/placeholder.svg?height=400&width=800')] opacity-10 mix-blend-overlay\"></div>\n                <div className=\"absolute inset-0 flex flex-col p-6\">\n                  <div className=\"flex justify-between items-center text-white mb-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <Eye className=\"w-5 h-5\" />\n                      <span className=\"font-semibold\">Active Users</span>\n                    </div>\n                    <div className=\"flex items-center gap-2 bg-white/10 backdrop-blur-sm px-3 py-1 rounded-full\">\n                      <div className=\"h-3 w-3 rounded-full bg-green-400 animate-pulse\" />\n                      <span className=\"text-sm font-medium\">\n                        847 online now\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-4 text-white/80 text-sm mb-4\">\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 rounded-full bg-indigo-300\" />\n                      <span>Mobile</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 rounded-full bg-purple-300\" />\n                      <span>Desktop</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 rounded-full bg-blue-300\" />\n                      <span>Tablet</span>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-7 gap-1 w-full flex-1\">\n                    {[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map(\n                      (day, dayIndex) => (\n                        <div\n                          key={`day-${dayIndex}`}\n                          className=\"flex flex-col gap-1\"\n                        >\n                          <div className=\"text-xs text-white/70 text-center mb-1 font-medium\">\n                            {day}\n                          </div>\n                          {Array(24)\n                            .fill(0)\n                            .map((_, hour) => {\n                              let intensity = 0;\n                              if (hour >= 8 && hour <= 11) {\n                                intensity = Math.random() * 0.3 + 0.6;\n                              } else if (hour >= 14 && hour <= 17) {\n                                intensity = Math.random() * 0.3 + 0.7;\n                              } else if (hour >= 19 && hour <= 22) {\n                                intensity = Math.random() * 0.4 + 0.5;\n                              } else {\n                                intensity = Math.random() * 0.3;\n                              }\n\n                              if (dayIndex >= 5) {\n                                if (hour >= 10 && hour <= 18) {\n                                  intensity = Math.random() * 0.4 + 0.4;\n                                } else {\n                                  intensity = Math.random() * 0.3;\n                                }\n                              }\n\n                              const deviceType = Math.random();\n                              let bgColor = \"bg-indigo-300\";\n                              if (deviceType > 0.6) {\n                                bgColor = \"bg-purple-300\";\n                              } else if (deviceType > 0.3) {\n                                bgColor = \"bg-blue-300\";\n                              }\n\n                              return (\n                                <div\n                                  key={`day-${dayIndex}-hour-${hour}`}\n                                  className={`h-1.5 w-full rounded-full ${bgColor} transition-all duration-300 hover:opacity-100`}\n                                  style={{\n                                    opacity: intensity,\n                                    transform: `scaleY(${intensity > 0.7 ? 1.2 : 1})`,\n                                  }}\n                                />\n                              );\n                            })}\n                        </div>\n                      ),\n                    )}\n                  </div>\n\n                  <div className=\"flex justify-between w-full mt-6 text-white\">\n                    <div className=\"flex flex-col bg-white/10 backdrop-blur-sm p-3 rounded-lg\">\n                      <span className=\"text-2xl font-bold\">3,842</span>\n                      <span className=\"text-xs opacity-80\">\n                        Weekly active users\n                      </span>\n                    </div>\n                    <div className=\"flex flex-col items-end bg-white/10 backdrop-blur-sm p-3 rounded-lg\">\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-2xl font-bold\">47.3%</span>\n                        <ArrowUp className=\"w-4 h-4 text-green-400\" />\n                      </div>\n                      <span className=\"text-xs opacity-80\">\n                        User growth rate\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n            className=\"md:col-span-2 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\"\n            fade={[\"bottom\"]}\n            dark\n          />\n\n          <BentoGrid\n            title={\n              <div className=\"flex flex-wrap items-center gap-2\">\n                <div className=\"p-2 rounded-lg bg-emerald-100 dark:bg-emerald-900/30\">\n                  <Zap className=\"w-5 h-5 text-emerald-600 dark:text-emerald-400\" />\n                </div>\n                <span>Real-time Data</span>\n              </div>\n            }\n            description=\"Live updates from connected devices\"\n            component={\n              <div className=\"h-full w-full bg-white dark:bg-zinc-950 flex items-center justify-center p-6 rounded-lg\">\n                <div className=\"w-full space-y-6\">\n                  {[\n                    {\n                      name: \"Production API\",\n                      value: 97,\n                      color: \"bg-emerald-500\",\n                      shadow: \"shadow-emerald-200 dark:shadow-emerald-900/20\",\n                    },\n                    {\n                      name: \"Staging Server\",\n                      value: 82,\n                      color: \"bg-blue-500\",\n                      shadow: \"shadow-blue-200 dark:shadow-blue-900/20\",\n                    },\n                    {\n                      name: \"Development\",\n                      value: 45,\n                      color: \"bg-amber-500\",\n                      shadow: \"shadow-amber-200 dark:shadow-amber-900/20\",\n                    },\n                  ].map((item, i) => (\n                    <div key={i} className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"font-medium text-gray-700 dark:text-gray-300 flex items-center gap-2\">\n                          <div\n                            className={`h-2 w-2 rounded-full ${item.color}`}\n                          ></div>\n                          {item.name}\n                        </span>\n                        <span\n                          className={`font-bold ${item.value > 90 ? \"text-emerald-500\" : item.value > 70 ? \"text-blue-500\" : \"text-amber-500\"}`}\n                        >\n                          {item.value}%\n                        </span>\n                      </div>\n                      <div className=\"h-3 w-full bg-gray-200 dark:bg-zinc-700 rounded-full overflow-hidden shadow-inner\">\n                        <div\n                          className={`h-full ${item.color} rounded-full shadow-lg ${item.shadow}`}\n                          style={{\n                            width: `${item.value}%`,\n                            animation: `pulse 2s infinite ${i * 0.2}s`,\n                            transition: \"width 1s ease-in-out\",\n                          }}\n                        />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700 flex flex-wrap gap-2 justify-between items-center text-sm text-gray-500\">\n                    <div className=\"flex items-center gap-2\">\n                      <Clock className=\"w-4 h-4\" />\n                      <span>Last updated: {currentTime}</span>\n                    </div>\n                    <button className=\"text-emerald-500 hover:text-emerald-600 dark:hover:text-emerald-400 font-medium flex items-center gap-1 transition-colors\">\n                      <span>Refresh</span>\n                      <ChevronRight className=\"w-3 h-3\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            }\n            className=\"md:col-span-1 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\"\n          />\n\n          <BentoGrid\n            title={\n              <div className=\"flex items-center gap-2\">\n                <div className=\"p-2 rounded-lg bg-cyan-100 dark:bg-cyan-900/30\">\n                  <Globe className=\"w-5 h-5 text-cyan-600 dark:text-cyan-400\" />\n                </div>\n                <span>Performance Metrics</span>\n              </div>\n            }\n            description=\"Server response times and key indicators\"\n            component={\n              <div className=\"h-full w-full flex items-center justify-center p-6 bg-white dark:bg-zinc-950 rounded-lg\">\n                <div className=\"grid grid-cols-2 gap-8 w-full\">\n                  <div className=\"flex flex-col items-center\">\n                    <div className=\"relative w-36 h-36\">\n                      <svg\n                        className=\"w-36 h-36 transform -rotate-90\"\n                        viewBox=\"0 0 100 100\"\n                      >\n                        <circle\n                          cx=\"50\"\n                          cy=\"50\"\n                          r=\"45\"\n                          fill=\"none\"\n                          stroke=\"rgba(203, 213, 225, 0.4)\"\n                          strokeWidth=\"10\"\n                          className=\"dark:stroke-gray-700\"\n                        />\n                        <circle\n                          cx=\"50\"\n                          cy=\"50\"\n                          r=\"45\"\n                          fill=\"none\"\n                          stroke=\"url(#gradient1)\"\n                          strokeWidth=\"10\"\n                          strokeDasharray=\"283\"\n                          strokeDashoffset=\"8.5\"\n                          strokeLinecap=\"round\"\n                          className=\"drop-shadow-lg\"\n                        >\n                          <animate\n                            attributeName=\"stroke-dashoffset\"\n                            from=\"283\"\n                            to=\"8.5\"\n                            dur=\"1.5s\"\n                            fill=\"freeze\"\n                            calcMode=\"spline\"\n                            keySplines=\"0.42 0 0.58 1\"\n                          />\n                        </circle>\n                        <defs>\n                          <linearGradient\n                            id=\"gradient1\"\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"100%\"\n                            y2=\"100%\"\n                          >\n                            <stop offset=\"0%\" stopColor=\"#06b6d4\" />\n                            <stop offset=\"100%\" stopColor=\"#0ea5e9\" />\n                          </linearGradient>\n                        </defs>\n                      </svg>\n                      <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                        <span className=\"text-4xl font-bold text-gray-800 dark:text-white\">\n                          97%\n                        </span>\n                        <span className=\"text-sm text-gray-500\">Uptime</span>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex items-center gap-2 text-sm text-gray-500 bg-white dark:bg-gray-800 px-3 py-1 rounded-full shadow-sm\">\n                      <Server className=\"w-4 h-4\" />\n                      <span>Last 30 days</span>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col items-center\">\n                    <div className=\"relative w-36 h-36\">\n                      <svg\n                        className=\"w-36 h-36 transform -rotate-90\"\n                        viewBox=\"0 0 100 100\"\n                      >\n                        <circle\n                          cx=\"50\"\n                          cy=\"50\"\n                          r=\"45\"\n                          fill=\"none\"\n                          stroke=\"rgba(203, 213, 225, 0.4)\"\n                          strokeWidth=\"10\"\n                          className=\"dark:stroke-gray-700\"\n                        />\n                        <circle\n                          cx=\"50\"\n                          cy=\"50\"\n                          r=\"45\"\n                          fill=\"none\"\n                          stroke=\"url(#gradient2)\"\n                          strokeWidth=\"10\"\n                          strokeDasharray=\"283\"\n                          strokeDashoffset=\"113.2\"\n                          strokeLinecap=\"round\"\n                          className=\"drop-shadow-lg\"\n                        >\n                          <animate\n                            attributeName=\"stroke-dashoffset\"\n                            from=\"283\"\n                            to=\"113.2\"\n                            dur=\"1.5s\"\n                            fill=\"freeze\"\n                            calcMode=\"spline\"\n                            keySplines=\"0.42 0 0.58 1\"\n                          />\n                        </circle>\n                        <defs>\n                          <linearGradient\n                            id=\"gradient2\"\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"100%\"\n                            y2=\"100%\"\n                          >\n                            <stop offset=\"0%\" stopColor=\"#10b981\" />\n                            <stop offset=\"100%\" stopColor=\"#059669\" />\n                          </linearGradient>\n                        </defs>\n                      </svg>\n                      <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                        <span className=\"text-4xl font-bold text-gray-800 dark:text-white\">\n                          42ms\n                        </span>\n                        <span className=\"text-sm text-gray-500\">Response</span>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex items-center gap-2 text-sm text-gray-500 bg-white dark:bg-gray-800 px-3 py-1 rounded-full shadow-sm\">\n                      <Activity className=\"w-4 h-4\" />\n                      <span>Global average</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n            className=\"md:col-span-2 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\"\n          />\n        </div>\n      </div>\n\n      <style jsx global>{`\n        @keyframes pulse {\n          0%,\n          100% {\n            opacity: 1;\n          }\n          50% {\n            opacity: 0.7;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n",
      "type": "registry:example",
      "target": "components/bento-grid-demo.tsx"
    }
  ]
}