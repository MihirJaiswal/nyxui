{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "custom-cursor-demo",
  "type": "registry:example",
  "title": "Custom Cursor Demo",
  "description": "Example showing a custom cursor.",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "..",
    "@radix-ui/react-avatar",
    "@radix-ui/react-separator",
    "@radix-ui/react-dialog"
  ],
  "registryDependencies": [
    "https://nyxui.com/r/custom-cursor.json"
  ],
  "files": [
    {
      "path": "registry/example/custom-cursor-demo.tsx",
      "content": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport {\r\n  MousePointer2,\r\n  Square,\r\n  Circle,\r\n  Type,\r\n  ImageIcon,\r\n  Hand,\r\n  Minus,\r\n  Plus,\r\n  Share,\r\n  Play,\r\n  ChevronDown,\r\n  ChevronRight,\r\n  Eye,\r\n  Search,\r\n  Layers,\r\n  Palette,\r\n  LucideComponent,\r\n  Zap,\r\n  Menu,\r\n  Settings,\r\n} from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\"\r\nimport { Cursor } from \"../ui/custom-cursor\"\r\nimport Image from \"next/image\"\r\n\r\nexport default function CustomCursorDemo() {\r\n  const [selectedTool, setSelectedTool] = useState(\"pointer\")\r\n  const [selectedLayer, setSelectedLayer] = useState(\"button\")\r\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\r\n  const [rightSidebarOpen, setRightSidebarOpen] = useState(false)\r\n  \r\n  // State for all input values\r\n  const [cornerRadius, setCornerRadius] = useState(\"8\")\r\n  const [opacity, setOpacity] = useState(\"100%\")\r\n  const [fontSize, setFontSize] = useState(\"16\")\r\n  const [fontWeight, setFontWeight] = useState(\"500\")\r\n  const [width, setWidth] = useState(\"192\")\r\n  const [height, setHeight] = useState(\"48\")\r\n  const [xPosition, setXPosition] = useState(\"91\")\r\n  const [yPosition, setYPosition] = useState(\"680\")\r\n\r\n  const tools = [\r\n    { id: \"pointer\", icon: MousePointer2, label: \"Move\" },\r\n    { id: \"hand\", icon: Hand, label: \"Hand\" },\r\n    { id: \"rectangle\", icon: Square, label: \"Rectangle\" },\r\n    { id: \"ellipse\", icon: Circle, label: \"Ellipse\" },\r\n    { id: \"text\", icon: Type, label: \"Text\" },\r\n    { id: \"image\", icon: ImageIcon, label: \"Image\" },\r\n  ]\r\n\r\n  // Custom SVG icons for different tools\r\n  const getToolCursor = (toolId: string) => {\r\n    const toolCursors = {\r\n      pointer: {\r\n        svg: <MousePointer2 className=\"w-4 h-4\" />,\r\n        name: \"Select\",\r\n        color: \"blue\",\r\n      },\r\n      hand: {\r\n        svg: <Hand className=\"w-4 h-4\" />,\r\n        name: \"Pan\",\r\n        color: \"green\",\r\n      },\r\n      rectangle: {\r\n        svg: <Square className=\"w-4 h-4\" />,\r\n        name: \"Rectangle\",\r\n        color: \"purple\",\r\n      },\r\n      ellipse: {\r\n        svg: <Circle className=\"w-4 h-4\" />,\r\n        name: \"Ellipse\",\r\n        color: \"pink\",\r\n      },\r\n      text: {\r\n        svg: <Type className=\"w-4 h-4\" />,\r\n        name: \"Text\",\r\n        color: \"yellow\",\r\n      },\r\n      image: {\r\n        svg: <ImageIcon className=\"w-4 h-4\" />,\r\n        name: \"Image\",\r\n        color: \"indigo\",\r\n      },\r\n    }\r\n    return toolCursors[toolId as keyof typeof toolCursors] || toolCursors.pointer\r\n  }\r\n\r\n  const LayersPanel = () => (\r\n    <div className=\"p-3 border-b border-[#3c3c3c]\">\r\n      <div className=\"flex items-center justify-between mb-3\">\r\n        <span className=\"text-sm font-medium\">Layers</span>\r\n        <Button variant=\"ghost\" size=\"sm\" className=\"w-6 h-6 p-0 text-gray-400 hover:text-white\">\r\n          <Search className=\"w-3 h-3\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"space-y-1\">\r\n        <Cursor name=\"Layer\" cursorColor=\"sky\">\r\n          <div className=\"flex items-center gap-2 p-1 rounded hover:bg-[#2c2c2c] cursor-pointer\">\r\n            <ChevronDown className=\"w-3 h-3 text-gray-400\" />\r\n            <Layers className=\"w-4 h-4 text-blue-400\" />\r\n            <span className=\"text-sm flex-1\">Home Screen</span>\r\n            <Eye className=\"w-3 h-3 text-gray-400\" />\r\n          </div>\r\n        </Cursor>\r\n\r\n        <div className=\"ml-4 space-y-1\">\r\n          <Cursor name=\"Header\" cursorColor=\"purple\">\r\n            <div className=\"flex items-center gap-2 p-1 rounded hover:bg-[#2c2c2c] cursor-pointer\">\r\n              <ChevronRight className=\"w-3 h-3 text-gray-400\" />\r\n              <Square className=\"w-4 h-4 text-purple-400\" />\r\n              <span className=\"text-sm flex-1\">Header</span>\r\n              <Eye className=\"w-3 h-3 text-gray-400\" />\r\n            </div>\r\n          </Cursor>\r\n\r\n          <Cursor name=\"Button\" cursorColor=\"green\">\r\n            <div\r\n              className={`flex items-center gap-2 p-1 rounded cursor-pointer ${\r\n                selectedLayer === \"button\" ? \"bg-blue-600\" : \"hover:bg-[#2c2c2c]\"\r\n              }`}\r\n              onClick={() => setSelectedLayer(\"button\")}\r\n            >\r\n              <div className=\"w-3 h-3\" />\r\n              <Square className=\"w-4 h-4 text-green-400\" />\r\n              <span className=\"text-sm flex-1\">Button</span>\r\n              <Eye className=\"w-3 h-3 text-gray-400\" />\r\n            </div>\r\n          </Cursor>\r\n\r\n          <Cursor name=\"Text\" cursorColor=\"yellow\">\r\n            <div className=\"flex items-center gap-2 p-1 rounded hover:bg-[#2c2c2c] cursor-pointer\">\r\n              <div className=\"w-3 h-3\" />\r\n              <Type className=\"w-4 h-4 text-orange-400\" />\r\n              <span className=\"text-sm flex-1\">Welcome Text</span>\r\n              <Eye className=\"w-3 h-3 text-gray-400\" />\r\n            </div>\r\n          </Cursor>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const AssetsPanel = () => (\r\n    <div className=\"p-3\">\r\n      <div className=\"flex items-center justify-between mb-3\">\r\n        <span className=\"text-sm font-medium\">Assets</span>\r\n        <Button variant=\"ghost\" size=\"sm\" className=\"w-6 h-6 p-0 text-gray-400 hover:text-white\">\r\n          <Plus className=\"w-3 h-3\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-2\">\r\n        <Cursor name=\"Component\" cursorColor=\"blue\">\r\n          <div className=\"aspect-square bg-[#2c2c2c] rounded border border-[#3c3c3c] flex items-center justify-center cursor-pointer hover:bg-[#3c3c3c]\">\r\n            <LucideComponent className=\"w-6 h-6 text-gray-400\" />\r\n          </div>\r\n        </Cursor>\r\n        <Cursor name=\"Colors\" cursorColor=\"pink\">\r\n          <div className=\"aspect-square bg-[#2c2c2c] rounded border border-[#3c3c3c] flex items-center justify-center cursor-pointer hover:bg-[#3c3c3c]\">\r\n            <Palette className=\"w-6 h-6 text-gray-400\" />\r\n          </div>\r\n        </Cursor>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const PropertiesPanel = () => (\r\n    <div className=\"p-3 space-y-4\">\r\n      {/* Design Properties */}\r\n      <div>\r\n        <h3 className=\"text-sm font-medium mb-3\">Design</h3>\r\n\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <label className=\"text-xs text-gray-400 mb-1 block\">Fill</label>\r\n            <Cursor name=\"Color Picker\" cursorColor=\"blue\">\r\n              <div className=\"flex items-center gap-2 cursor-pointer\">\r\n                <div className=\"w-6 h-6 bg-blue-600 rounded border border-[#3c3c3c]\"></div>\r\n                <span className=\"text-sm\">#3B82F6</span>\r\n              </div>\r\n            </Cursor>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"text-xs text-gray-400 mb-1 block\">Corner Radius</label>\r\n            <Cursor name=\"Input\" cursorColor=\"sky\">\r\n              <Input \r\n                value={cornerRadius} \r\n                onChange={(e) => setCornerRadius(e.target.value)}\r\n                className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n              />\r\n            </Cursor>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"text-xs text-gray-400 mb-1 block\">Opacity</label>\r\n            <Cursor name=\"Input\" cursorColor=\"sky\">\r\n              <Input \r\n                value={opacity} \r\n                onChange={(e) => setOpacity(e.target.value)}\r\n                className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n              />\r\n            </Cursor>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Separator className=\"bg-[#3c3c3c]\" />\r\n\r\n      {/* Text Properties */}\r\n      <div>\r\n        <h3 className=\"text-sm font-medium mb-3\">Text</h3>\r\n\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <label className=\"text-xs text-gray-400 mb-1 block\">Font</label>\r\n            <Cursor name=\"Font Selector\" cursorColor=\"purple\">\r\n              <div className=\"flex items-center justify-between cursor-pointer\">\r\n                <span className=\"text-sm\">Inter</span>\r\n                <ChevronDown className=\"w-4 h-4 text-gray-400\" />\r\n              </div>\r\n            </Cursor>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-2\">\r\n            <div>\r\n              <label className=\"text-xs text-gray-400 mb-1 block\">Size</label>\r\n              <Cursor name=\"Font Size\" cursorColor=\"sky\">\r\n                <Input \r\n                  value={fontSize} \r\n                  onChange={(e) => setFontSize(e.target.value)}\r\n                  className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n                />\r\n              </Cursor>\r\n            </div>\r\n            <div>\r\n              <label className=\"text-xs text-gray-400 mb-1 block\">Weight</label>\r\n              <Cursor name=\"Font Weight\" cursorColor=\"sky\">\r\n                <Input \r\n                  value={fontWeight} \r\n                  onChange={(e) => setFontWeight(e.target.value)}\r\n                  className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n                />\r\n              </Cursor>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Separator className=\"bg-[#3c3c3c]\" />\r\n\r\n      {/* Layout Properties */}\r\n      <div>\r\n        <h3 className=\"text-sm font-medium mb-3\">Layout</h3>\r\n\r\n        <div className=\"space-y-3\">\r\n          <div className=\"grid grid-cols-2 gap-2\">\r\n            <div>\r\n              <label className=\"text-xs text-gray-400 mb-1 block\">W</label>\r\n              <Cursor name=\"Width\" cursorColor=\"sky\">\r\n                <Input \r\n                  value={width} \r\n                  onChange={(e) => setWidth(e.target.value)}\r\n                  className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n                />\r\n              </Cursor>\r\n            </div>\r\n            <div>\r\n              <label className=\"text-xs text-gray-400 mb-1 block\">H</label>\r\n              <Cursor name=\"Height\" cursorColor=\"sky\">\r\n                <Input \r\n                  value={height} \r\n                  onChange={(e) => setHeight(e.target.value)}\r\n                  className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n                />\r\n              </Cursor>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-2\">\r\n            <div>\r\n              <label className=\"text-xs text-gray-400 mb-1 block\">X</label>\r\n              <Cursor name=\"X Position\" cursorColor=\"sky\">\r\n                <Input \r\n                  value={xPosition} \r\n                  onChange={(e) => setXPosition(e.target.value)}\r\n                  className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n                />\r\n              </Cursor>\r\n            </div>\r\n            <div>\r\n              <label className=\"text-xs text-gray-400 mb-1 block\">Y</label>\r\n              <Cursor name=\"Y Position\" cursorColor=\"sky\">\r\n                <Input \r\n                  value={yPosition} \r\n                  onChange={(e) => setYPosition(e.target.value)}\r\n                  className=\"bg-[#2c2c2c] border-[#3c3c3c] text-white h-8\" \r\n                />\r\n              </Cursor>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const currentToolCursor = getToolCursor(selectedTool)\r\n\r\n  return (\r\n    <div className=\"w-full bg-[#2c2c2c] text-white flex flex-col relative\">\r\n        <div className=\"bg-[#2c2c2c] border-b border-[#3c3c3c] px-2 sm:px-4 py-2 flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-2 sm:gap-4\">\r\n            {/* Mobile menu buttons */}\r\n            <div className=\"flex items-center gap-1 lg:hidden\">\r\n              <Sheet open={leftSidebarOpen} onOpenChange={setLeftSidebarOpen}>\r\n                <SheetTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"sm\" className=\"w-8 h-8 p-0 text-gray-400 hover:text-white\">\r\n                    <Menu className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </SheetTrigger>\r\n                <SheetContent side=\"left\" className=\"w-64 bg-[#1e1e1e] border-[#3c3c3c] p-0\">\r\n                  <div className=\"flex flex-col h-full\">\r\n                    <LayersPanel />\r\n                    <AssetsPanel />\r\n                  </div>\r\n                </SheetContent>\r\n              </Sheet>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <Image\r\n              src='/assets/images/custom-cursor/figma.png'\r\n              alt='Figma'\r\n              height={24}\r\n              width={24}\r\n              className='w-6 h-6'\r\n              />\r\n              <span className=\"text-sm font-medium hidden sm:block\">Figma</span>\r\n            </div>\r\n\r\n            <Separator orientation=\"vertical\" className=\"h-4 bg-[#3c3c3c] hidden sm:block\" />\r\n\r\n            <Cursor name=\"File Menu\" cursorColor=\"purple\">\r\n              <div className=\"flex items-center gap-2 cursor-pointer\">\r\n                <span className=\"text-sm hidden sm:block\">Mobile App Design</span>\r\n                <span className=\"text-sm sm:hidden\">Design</span>\r\n                <ChevronDown className=\"w-4 h-4 text-gray-400\" />\r\n              </div>\r\n            </Cursor>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-1 sm:gap-3\">\r\n            <Cursor name=\"Present\" cursorColor=\"green\">\r\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-white hover:bg-[#3c3c3c] hidden sm:flex\">\r\n                <Play className=\"w-4 h-4 mr-2\" />\r\n                Present\r\n              </Button>\r\n            </Cursor>\r\n            <Cursor name=\"Present\" cursorColor=\"green\">\r\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-white hover:bg-[#3c3c3c] sm:hidden\">\r\n                <Play className=\"w-4 h-4\" />\r\n              </Button>\r\n            </Cursor>\r\n\r\n            <Cursor name=\"Share\" cursorColor=\"blue\" className=\"hidden sm:block\">\r\n              <Button size=\"sm\" className=\"bg-blue-600 hover:bg-blue-700\">\r\n                <Share className=\"w-4 h-4 sm:mr-2\" />\r\n                <span className=\"hidden sm:inline\">Share</span>\r\n              </Button>\r\n            </Cursor>\r\n\r\n            {/* Mobile properties menu */}\r\n            <div className=\"lg:hidden\">\r\n              <Sheet open={rightSidebarOpen} onOpenChange={setRightSidebarOpen}>\r\n                <SheetTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"sm\" className=\"w-8 h-8 p-0 text-gray-400 hover:text-white\">\r\n                    <Settings className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </SheetTrigger>\r\n                <SheetContent side=\"right\" className=\"w-64 bg-[#1e1e1e] border-[#3c3c3c] p-0\">\r\n                  <PropertiesPanel />\r\n                </SheetContent>\r\n              </Sheet>\r\n            </div>\r\n\r\n            <Cursor name=\"Mihir\" cursorColor=\"pink\">\r\n              <Avatar className=\"w-8 h-8 cursor-pointer\">\r\n                <AvatarImage src=\"/assets/images/landing-page/mihir.webp\" />\r\n                <AvatarFallback>MJ</AvatarFallback>\r\n              </Avatar>\r\n            </Cursor>\r\n          </div>\r\n        </div>\r\n\r\n      <div className=\"flex flex-1 overflow-hidden\">\r\n        {/* Left Toolbar */}\r\n        <div className=\"bg-[#2c2c2c] border-r border-[#3c3c3c] p-1 sm:p-2 flex flex-col gap-1\">\r\n          {tools.map((tool) => (\r\n            <Cursor key={tool.id} name={tool.label} cursorColor=\"purple\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className={`w-8 h-8 sm:w-10 sm:h-10 p-0 ${\r\n                  selectedTool === tool.id\r\n                    ? \"bg-[#3c3c3c] text-white\"\r\n                    : \"text-gray-400 hover:text-white hover:bg-[#3c3c3c]\"\r\n                }`}\r\n                onClick={() => setSelectedTool(tool.id)}\r\n              >\r\n                <tool.icon className=\"w-3 h-3 sm:w-4 sm:h-4\" />\r\n              </Button>\r\n            </Cursor>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Left Sidebar - Hidden on mobile/tablet */}\r\n        <div className=\"w-64 bg-[#1e1e1e] border-r border-[#3c3c3c] hidden lg:flex flex-col\">\r\n          <LayersPanel />\r\n          <AssetsPanel />\r\n        </div>\r\n\r\n        {/* Main Canvas */}\r\n        <Cursor\r\n          name={currentToolCursor.name}\r\n          cursorColor={currentToolCursor.color}\r\n          customSVG={currentToolCursor.svg}\r\n          className=\"flex-1 bg-[#1a1a1a] relative overflow-hidden\"\r\n        >\r\n          {/* Canvas Controls */}\r\n          <div className=\"absolute top-2 sm:top-4 left-1/2 transform -translate-x-1/2 z-10\">\r\n            <div className=\"bg-[#2c2c2c] border border-[#3c3c3c] rounded-lg px-2 sm:px-3 py-1 flex items-center gap-2\">\r\n              <Cursor name=\"Zoom Out\" cursorColor=\"sky\">\r\n                <Button variant=\"ghost\" size=\"sm\" className=\"w-5 h-5 sm:w-6 sm:h-6 p-0 text-gray-400 hover:text-white\">\r\n                  <Minus className=\"w-3 h-3\" />\r\n                </Button>\r\n              </Cursor>\r\n              <span className=\"text-xs text-gray-400\">100%</span>\r\n              <Cursor name=\"Zoom In\" cursorColor=\"sky\">\r\n                <Button variant=\"ghost\" size=\"sm\" className=\"w-5 h-5 sm:w-6 sm:h-6 p-0 text-gray-400 hover:text-white\">\r\n                  <Plus className=\"w-3 h-3\" />\r\n                </Button>\r\n              </Cursor>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Canvas Content */}\r\n          <div className=\"absolute inset-0 flex items-center justify-center p-4 overflow-hidden\">\r\n            <div\r\n              className=\"bg-white rounded-lg shadow-2xl max-w-full max-h-full\"\r\n              style={{\r\n                width: \"min(375px, 90vw)\",\r\n                height: \"min(812px, 90vh)\",\r\n                aspectRatio: \"375/812\",\r\n              }}\r\n            >\r\n              {/* Phone Screen Content */}\r\n              <div className=\"p-4 sm:p-6 h-full flex flex-col overflow-hidden\">\r\n                <div className=\"text-center mb-4 sm:mb-8\">\r\n                  <h1 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-2\">Welcome</h1>\r\n                  <p className=\"text-sm sm:text-base text-gray-600\">Get started with your new app</p>\r\n                </div>\r\n\r\n                <div className=\"flex-1 flex items-center justify-center\">\r\n                  <Image src=\"/logo.png\" alt=\"Placeholder\" width={200} height={200} className=\"rounded-full\" />\r\n                </div>\r\n\r\n                <div className=\"space-y-3 sm:space-y-4\">\r\n                  <div\r\n                    className={`w-full py-3 sm:py-4 px-4 sm:px-6 bg-blue-600 text-white rounded-lg text-center font-medium cursor-pointer text-sm sm:text-base ${\r\n                      selectedLayer === \"button\" ? \"ring-2 ring-blue-400 ring-offset-2\" : \"\"\r\n                    }`}\r\n                    onClick={() => setSelectedLayer(\"button\")}\r\n                  >\r\n                    Get Started\r\n                  </div>\r\n                  <button className=\"w-full py-3 sm:py-4 px-4 sm:px-6 border border-gray-300 text-gray-700 rounded-lg text-center font-medium text-sm sm:text-base\">\r\n                    Learn More\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Cursor>\r\n\r\n        {/* Right Sidebar - Hidden on mobile/tablet */}\r\n        <div className=\"w-64 bg-[#1e1e1e] border-l border-[#3c3c3c] hidden lg:block\">\r\n          <PropertiesPanel />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bottom Status Bar */}\r\n      <Cursor name=\"Status\" cursorColor=\"sky\">\r\n        <div className=\"bg-[#2c2c2c] border-t border-[#3c3c3c] px-2 sm:px-4 py-2 flex items-center justify-between text-xs text-gray-400\">\r\n          <div className=\"flex items-center gap-2 sm:gap-4\">\r\n            <span>Ready</span>\r\n            <Badge variant=\"secondary\" className=\"bg-[#3c3c3c] text-gray-300 hidden sm:inline-flex\">\r\n              Auto Layout\r\n            </Badge>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 sm:gap-4\">\r\n            <span className=\"hidden sm:inline\">100%</span>\r\n            <span>1 selected</span>\r\n          </div>\r\n        </div>\r\n      </Cursor>\r\n    </div>\r\n  )\r\n}",
      "type": "registry:example",
      "target": "components/custom-cursor-demo.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-xl text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background text-foreground shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        rainbow:\n          \"group relative animate-rainbow cursor-pointer border-0 bg-[linear-gradient(#121213,#121213),linear-gradient(#121213_50%,rgba(18,18,19,0.6)_80%,rgba(18,18,19,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] bg-[length:200%] text-primary-foreground [background-clip:padding-box,border-box,border-box] [background-origin:border-box] [border:calc(0.08*1rem)_solid_transparent] before:absolute before:bottom-[-20%] before:left-1/2 before:z-0 before:h-1/5 before:w-3/5 before:-translate-x-1/2 before:animate-rainbow before:bg-[linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] before:[filter:blur(calc(0.8*1rem))] dark:bg-[linear-gradient(#fff,#fff),linear-gradient(#fff_50%,rgba(255,255,255,0.6)_80%,rgba(0,0,0,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))]\",\n        \"rainbow-outline\":\n          \"group relative animate-rainbow cursor-pointer border-0 border-input bg-[linear-gradient(#fff,#fff),linear-gradient(#fff_50%,rgba(255,255,255,0.6)_80%,rgba(0,0,0,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] bg-[length:200%] px-4 text-foreground shadow-sm [background-clip:padding-box,border-box,border-box] [background-origin:border-box] [border:calc(0.08*1rem)_solid_transparent] before:absolute before:bottom-[-20%] before:left-1/2 before:z-0 before:h-1/5 before:w-3/5 before:-translate-x-1/2 before:animate-rainbow before:bg-[linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] before:[filter:blur(calc(0.8*1rem))] dark:bg-[linear-gradient(#121213,#121213),linear-gradient(#121213_50%,rgba(18,18,19,0.6)_80%,rgba(18,18,19,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))]\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-xl px-3 text-xs\",\n        lg: \"h-11 rounded-xl px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\ninterface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        data-slot=\"button\"\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\n\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants, type ButtonProps };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/input.tsx",
      "content": "import * as React from \"react\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Input };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/avatar.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Avatar, AvatarImage, AvatarFallback };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/separator.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Separator };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/badge.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\";\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/sheet.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\";\nimport { XIcon } from \"lucide-react\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {\n  return <SheetPrimitive.Root data-slot=\"sheet\" {...props} />;\n}\n\nfunction SheetTrigger({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {\n  return <SheetPrimitive.Trigger data-slot=\"sheet-trigger\" {...props} />;\n}\n\nfunction SheetClose({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Close>) {\n  return <SheetPrimitive.Close data-slot=\"sheet-close\" {...props} />;\n}\n\nfunction SheetPortal({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Portal>) {\n  return <SheetPrimitive.Portal data-slot=\"sheet-portal\" {...props} />;\n}\n\nfunction SheetOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {\n  return (\n    <SheetPrimitive.Overlay\n      data-slot=\"sheet-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SheetContent({\n  className,\n  children,\n  side = \"right\",\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Content> & {\n  side?: \"top\" | \"right\" | \"bottom\" | \"left\";\n}) {\n  return (\n    <SheetPortal>\n      <SheetOverlay />\n      <SheetPrimitive.Content\n        data-slot=\"sheet-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n          side === \"right\" &&\n            \"data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm\",\n          side === \"left\" &&\n            \"data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm\",\n          side === \"top\" &&\n            \"data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b\",\n          side === \"bottom\" &&\n            \"data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t\",\n          className,\n        )}\n        {...props}\n      >\n        {children}\n        <SheetPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none\">\n          <XIcon className=\"size-4\" />\n          <span className=\"sr-only\">Close</span>\n        </SheetPrimitive.Close>\n      </SheetPrimitive.Content>\n    </SheetPortal>\n  );\n}\n\nfunction SheetHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-header\"\n      className={cn(\"flex flex-col gap-1.5 p-4\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SheetFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-footer\"\n      className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SheetTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Title>) {\n  return (\n    <SheetPrimitive.Title\n      data-slot=\"sheet-title\"\n      className={cn(\"text-foreground font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SheetDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Description>) {\n  return (\n    <SheetPrimitive.Description\n      data-slot=\"sheet-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Sheet,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}